@import '../../../assets/style/setup/mixins';

.login-signup {
    grid-auto-flow: column;
    height: 100%;
    justify-content: space-evenly;

    .close-btn {
        position: absolute;
        left: 6px;
        top: 6px;
        background-color: transparent;
        border: none;
        cursor: pointer;
        z-index: 14;
        font-family: fira-reg, Tahoma;
    }

    .user-login-signup,
    .user-wishlist,
    .user-order {
        box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;
        background-color: var(--white);
        padding: 1rem;
        border-radius: .5rem;
        position: absolute;
    }

    span::before {
        font-family: fa-solid;
        color: var(--primary-clr2);
        cursor: pointer;
    }

    span:hover::before {
        color: var(--primary-clr1);
    }

    .user::before {
        content: '\f007';
    }

    .wishlist::before {
        content: '\f004';
    }

    .order::before {
        content: '\f07a';
    }

    .layout {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 5;
        opacity: 0.7;
        background-color: var(--primary-clr1);
    }

    .user-login-signup {
        grid-auto-flow: row;
        z-index: 10;
        top: 50vh;
        left: 50%;
        transform: translate(-50%, -50%);

        input {
            @include input1;
            position: static;
        }



        button:not(.close-btn) {
            @include buttons1;
            width: max-content;
            padding: .5em;
        }

        .login-info,
        .sign-up-info,
        .logged-in-user {
            grid-auto-flow: row;
            justify-content: center;
            justify-items: center;
        }

        .login-info {
            position: relative;
            gap: 8px;

            margin-block-end: 1rem;

            .login-btn {
                text-align: center;
            }

            .guest-btn {
                background-color: transparent;
                border: none;
                cursor: pointer;

                &:hover {
                    color: var(--primary-clr2);
                }
            }

        }

        .logged-in-user>*,
        .sign-up-info h3 {
            text-align: center;
            line-height: 1.5em;
        }

        .logged-in-user {

            h1 {
                margin-block-start: 8px;
            }
        }
    }

    .user-wishlist,
    .user-order {
        width: 200px;
        height: 100%;
        position: fixed;
        z-index: 20;
        top: 0;
        right: 0;

        .close-btn {
            top: 2px;
            font-size: 1em;
        }

        .no-items {
            text-align: center;
        }
    }

    .wishlist-header,
    .order-header {
        text-align: center;
        margin-block: 1rem;
        font-family: fira-reg, Tahoma;
    }

    .user-wishlist {

        .wishlist-items {
            grid-auto-flow: row;
            grid-template-rows: 120px;
            gap: .5rem;
            overflow-y: auto;
            position: absolute;

            .wishlist-item,
            .wishlist-item .remove {
                background-color: #e8e8e8;
            }

            .wishlist-item {
                grid-template-columns: repeat(2, 1fr);
                height: 100%;
                border-radius: 7px;

                img {
                    width: 100%;
                    height: 100%;
                    object-fit: cover;
                }

                .text {
                    justify-content: space-between;
                    height: 100%;

                    &>* {
                        text-align: center;
                    }

                    h2 {
                        font-size: .8em;
                    }

                    p {
                        font-size: .6em;
                        font-family: fira-reg, Tahoma;
                    }
                }

                button {
                    @include buttons1;
                }
            }
        }
    }

    .user-order {

        background-color: var(--white);

        .order-items {
            grid-auto-flow: row;
            grid-template-rows: 160px;
            gap: .5rem;

            .order-item {

                grid-template-columns: 120px 1fr;
                height: 100%;

                img {
                    width: 100%;
                    height: 100%;
                    object-fit: cover;
                    grid-column: 1;
                }

                .text {
                    grid-column: 2;
                    justify-content: space-between;
                    height: 100%;


                    &>* {
                        text-align: center;
                    }

                    h2 {
                        font-size: .8em;
                    }

                    p {
                        font-size: .6em;
                        font-family: fira-reg, Tahoma;
                    }

                    button {
                        @include buttons2;
                        height: max-content;
                    }
                }
            }

            .order-summary {

                button {
                    @include buttons1;
                    padding: .5rem;
                }
            }
        }


    }
}

// <div class="user-order grid" *ngIf="loggedInUser && sectionClicked === 'order'">         
//     <button (click)="onCloseModal()" class="close-btn">x</button>
//     <h1 class="order-header">order</h1>           
//     <div class="no-items" *ngIf="!loggedInUser.recentOrder">No items added to order.</div>
//     <ul class="order-items grid" *ngIf="loggedInUser.recentOrder && loggedInUser.recentOrder.selectedItems.length">
//         <li *ngFor="let item of loggedInUser.recentOrder.selectedItems" class="order-item">
//             <img [src]="item.imgUrl || item.imgUrl[0]" [alt]="item.name" [title]="item.name" />
//             <div class="text grid">
//                 <h2>{{item.name}}</h2>
//                 <p>${{item.price}}</p>
//                 <button (click)="onRemoveItemFromWishlist(item._id)" class="remove">Remove</button>
//             </div> 
//         </li>
//         <h1>Sum: {{loggedInUser.recentOrder!.sum}}</h1>
//     </ul>
// </div> 